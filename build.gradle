plugins {
	id 'java'
	id 'maven-publish'
	id 'idea'
	id 'eclipse'
	id 'dev.architectury.loom' version '0.12.0-SNAPSHOT'
}

apply from: 'https://raw.githubusercontent.com/Reforged-Mods/GradleScripts/2.5-arch-loom/ferry.gradle'

loom {
	forge {
		mixinConfigs = ["mixins.terrestria-client.json", "mixins.terrestria-common.json", "mixins.terrestria-worldgen.json", "mixins.terrestria-common.pathing.json", "mixins.terrestria-common.bugfix.json"]
	}
}

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
//Print out JVM information so that we know what version is running. Extreamly useful for people to know when helping you.
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

dependencies {
	minecraft "com.mojang:minecraft:$project.minecraft_version"
	mappings "net.fabricmc:yarn:$project.yarn_mappings:v2"


	forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
	modImplementation ("com.github.Reforged-Mods:FabricBiomeApiReforged:1.0.5") //d7bc649383
	includeMod "terraform-api", "com.github.Reforged-Mods.Terraform-Reforged:terraform-biome-remapper-api-v1:${project.terraform_version}"
	includeMod "terraform-api", "com.github.Reforged-Mods.Terraform-Reforged:terraform-config-api-v1:${project.terraform_version}"
	includeMod "terraform-api", "com.github.Reforged-Mods.Terraform-Reforged:terraform-dirt-api-v1:${project.terraform_version}"
	includeMod "terraform-api", "com.github.Reforged-Mods.Terraform-Reforged:terraform-shapes-api-v1:${project.terraform_version}"
	includeMod "terraform-api", "com.github.Reforged-Mods.Terraform-Reforged:terraform-surfaces-api-v1:${project.terraform_version}"
	includeMod "terraform-api", "com.github.Reforged-Mods.Terraform-Reforged:terraform-tree-api-v1:${project.terraform_version}"
	includeMod "terraform-api", "com.github.Reforged-Mods.Terraform-Reforged:terraform-wood-api-v1:${project.terraform_version}"
	if (findProject(':worldgen') != null) {
		includeMod "terrablender", "com.github.glitchfiend:TerraBlender-forge:${terrablender_version}"
	}
	afterEvaluate {
		subprojects.each {
			testmodImplementation sourceSets.main.output
			implementation project(path: "${it.name}", configuration: "namedElements")
			include project("${it.name}:")
		}
	}
}
allprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'eclipse'
	apply plugin: 'maven-publish'
	apply plugin: 'dev.architectury.loom'

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	group = project.maven_group

	configurations {
		dev {
			canBeResolved = false
			canBeConsumed = true
		}
	}

	jar {
		classifier = "dev"
	}

	afterEvaluate {
		processResources {
			inputs.property "version", project.version

			filesMatching("META-INF/mods.toml") {
				expand "version": project.version
			}
		}
	}

	//task sourcesJar(type: Jar, dependsOn: classes) {
	//	classifier = "sources"
	//	from sourceSets.main.allSource
	//}

	tasks.withType(JavaCompile) {
		it.options.encoding = "UTF-8"
		it.options.release = 17
	}

	repositories {
		maven {
			name = 'TerraformersMC'
			url = 'https://maven.terraformersmc.com/'
		}

		// TerraBlender
		maven {
			url = 'https://maven.minecraftforge.net/'
		}
		maven { url 'https://jitpack.io' }
	}
}

subprojects {
	dependencies {
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

		forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
		modImplementation ("com.github.Reforged-Mods:FabricBiomeApiReforged:${rootProject.fbapi_reforged_version}") //d7bc649383

		modImplementation "com.github.Reforged-Mods.Terraform-Reforged:terraform-biome-remapper-api-v1:${project.terraform_version}"
		modImplementation "com.github.Reforged-Mods.Terraform-Reforged:terraform-config-api-v1:${project.terraform_version}"
		modImplementation "com.github.Reforged-Mods.Terraform-Reforged:terraform-dirt-api-v1:${project.terraform_version}"
		modImplementation "com.github.Reforged-Mods.Terraform-Reforged:terraform-shapes-api-v1:${project.terraform_version}"
		modImplementation "com.github.Reforged-Mods.Terraform-Reforged:terraform-surfaces-api-v1:${project.terraform_version}"
		modImplementation "com.github.Reforged-Mods.Terraform-Reforged:terraform-tree-api-v1:${project.terraform_version}"
		modImplementation "com.github.Reforged-Mods.Terraform-Reforged:terraform-wood-api-v1:${project.terraform_version}"
		modImplementation "com.github.Reforged-Mods.Terraform-Reforged:terraform-utils-v1:${project.terraform_version}"
	}

	version = rootProject.version

	runClient.enabled = false
}
