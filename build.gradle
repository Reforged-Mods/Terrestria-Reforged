import org.gradle.jvm.toolchain.JavaLanguageVersion

plugins {
	id 'java'
	id 'maven-publish'
	id 'idea'
	id 'eclipse'
	id 'dev.architectury.loom' version '1.6-SNAPSHOT'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
group = project.maven_group


configurations {
	common
	shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
	compileClasspath.extendsFrom common
	runtimeClasspath.extendsFrom common
	developmentForge.extendsFrom common
}
//Print out JVM information so that we know what version is running. Extreamly useful for people to know when helping you.
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

loom {
	accessWidenerPath = file("src/main/resources/terrestria.accesswidener")
	runs {
		data {
			data()
		}
	}
	forge {
		dataGen {
			mod "terrestria"
		}
		convertAccessWideners = true
		extraAccessWideners.add("terrestria.accesswidener")
		mixinConfigs = ["mixins.terrestria-worldgen.json", "mixins.terrestria-common.json", "mixins.terrestria-common.pathing.json", "mixins.terrestria-client.json"]
	}
}

configurations {
	dev {
		canBeResolved = false
		canBeConsumed = true
	}
}



repositories {
	maven {
		name = 'TerraformersMC'
		url = 'https://maven.terraformersmc.com/'
	}

	// TerraBlender
	maven {
		url = 'https://maven.minecraftforge.net/'
	}
	maven {  url = "https://repo.repsy.io/mvn/trinsdar/reforged-mods/"}
	maven { url 'https://jitpack.io' }
}

dependencies {
	minecraft "com.mojang:minecraft:$project.minecraft_version"
	mappings "net.fabricmc:yarn:$project.yarn_mappings:v2"


	forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
	//modImplementation ("com.github.Reforged-Mods:FabricBiomeApiReforged:1.0.5") //d7bc649383
	//includeMod "terraform-api", "com.github.Reforged-Mods.Terraform-Reforged:terraform-biome-remapper-api-v1:${project.terraform_version}"
	modImplementation include("io.github.reforgedmods.terraform-api:terraform-config-api-v1:${project.terraform_version}")
	modImplementation include("io.github.reforgedmods.terraform-api:terraform-dirt-api-v1:${project.terraform_version}")
	modImplementation include("io.github.reforgedmods.terraform-api:terraform-shapes-api-v1:${project.terraform_version}")
	modImplementation include("io.github.reforgedmods.terraform-api:terraform-surfaces-api-v1:${project.terraform_version}")
	modImplementation include("io.github.reforgedmods.terraform-api:terraform-tree-api-v1:${project.terraform_version}")
	modImplementation include("io.github.reforgedmods.terraform-api:terraform-wood-api-v1:${project.terraform_version}")
	modImplementation include("io.github.reforgedmods.terraform-api:terraform-utils-v1:${project.terraform_version}")
	modImplementation "com.github.glitchfiend:TerraBlender-forge:${terrablender_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("META-INF/mods.toml") {
		expand "version": project.version
	}
}

jar {
	archiveClassifier.set "dev"
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'eclipse'
	apply plugin: 'maven-publish'
	apply plugin: 'dev.architectury.loom'


}
